package decorator;
/*  Паттерн Декоратор.
Реализует принцип "классы должны быть открыты для расширения, но закрыты для изменения".
Декораторы имеют тот же супертип, что и декорируемые объекты. Объект можно завернуть в один или несколько
декораторов. Паттерн динамические наделяет объект новыми возможности и свяляется альтернативой субклассированию
 в части расширения функциональности. */

public abstract class Beverage {
    String description = "Unknown beverage";

    public String getDescription() {
        return description;
    }
    public abstract double cost();
}
